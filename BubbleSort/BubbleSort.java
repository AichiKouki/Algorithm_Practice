public class BubbleSort{
	public static void main(String[]args){
		int a[]=new int[1000];
		int swapped=0;//正しい順番かどうかのフラグ。最初はフラグを立てておく
		int temp=0;//仮に代入される数字
		int n;//ループと、数字交換に使うための添え字の変数

		for(int i=0;i<1000;i++){
			a[i]=(int)Math.floor(Math.random()*1000);//1000個のランダムな数字を配列に入れてえる
		}
		System.out.println("--------整列前--------");
		//整列前の乱数を1000個順番に表示していく
		for(int i=0;i<1000;i++){
			System.out.println(a[i]);
		}
		//バブルソートの本体
		swapped=1;
		while(swapped==1){//ループの継続条件は、フラグが立っている間
			swapped=0;//ループに入ると一旦フラグは降ろす。この後の処理で交換する必要がなくなったらwhileは処理されなくなるために0にしてる
			for(n=0;n<999;n++){//下の処理でn+1をするので、1000とかくと不正なインデックスの配列にアクセスしようとすることになるから999になる
				if(a[n]>a[n+1]){//隣り合わせのものを比較して、交換する必要があれば処理される
					temp=a[n];//左の数字を仮の変数に代入
					a[n]=a[n+1];//右の数字を左の数字に代入
					a[n+1]=temp;//さっき仮に代入した左の変数を今度は右の場所に代入
					swapped=1;//交換したことを表すためにフラグを立てる。これでまた交換判定が行われる
				}
			}
		}
		System.out.println("--------整列後--------");
		for(int i=0;i<1000;i++){
			System.out.println(a[i]);//1111222233333みたいになるが、乱数を最初に1000個作ったからそうなるのは当然
		}
	}
}

/*
ソートとは、データを順番に並び替えるもの。
バブルソート(隣接交換法)とは、隣り合ったデータを比較する。a[i]とa[i+1]を比較する。正しい順番であれば交換しない。
左から右へ隣ものを比較して交換していくが、一回では完全に並び替えが完了しなかったら完了するまでこの動きを繰り返す
*/
